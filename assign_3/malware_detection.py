import hashlib
import os
import random

def load_signatures(filename="malware_signatures.txt"):
    signatures = {}
    with open(filename, "r") as file:
        next(file)  # Skip header line
        next(file)  # Skip -------
        for line in file:
            md5_hash, sha256_hash, label = line.strip().split(" | ")
            signatures[(md5_hash, sha256_hash)] = label
    return signatures

def generate_random_string(size=32):
    return os.urandom(size)

def calculate_hashes(data):
    md5_hash = hashlib.md5(data).hexdigest()
    sha256_hash = hashlib.sha256(data).hexdigest()
    return md5_hash, sha256_hash

def detect_malware(signatures, num_files=10):
    results = {}
    for i in range(num_files):
        file_name = f"testA/test{i}.txt"  # Generate the file name
        with open(file_name, "w") as file:

            random_data = generate_random_string(random.randint(10, 100))
            file.write(random_data.hex())
            md5_hash, sha256_hash = calculate_hashes(random_data)
            if (md5_hash, sha256_hash) in signatures:
                results[f"file_{i}"] = signatures[(md5_hash, sha256_hash)]
            else:
                results[f"file_{i}"] = "clean"

    return results

signatures = load_signatures()
detection_results = detect_malware(signatures)
for file, status in detection_results.items():
    print(f"{file}: {status}")
